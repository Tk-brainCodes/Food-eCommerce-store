[{"/home/caleb/Public/Foodie-order/client/src/App.js":"1","/home/caleb/Public/Foodie-order/client/src/Components/Pages/Cart/Cart.js":"2","/home/caleb/Public/Foodie-order/client/src/Components/Nav/Navbar.js":"3","/home/caleb/Public/Foodie-order/client/src/Components/Pages/Food/Food.js":"4","/home/caleb/Public/Foodie-order/client/src/Components/Pages/Saved/Saved.js":"5","/home/caleb/Public/Foodie-order/client/src/Components/Pages/Products/Products.js":"6"},{"size":2663,"mtime":1612023318877,"results":"7","hashOfConfig":"8"},{"size":4609,"mtime":1611911542877,"results":"9","hashOfConfig":"8"},{"size":1786,"mtime":1611881137915,"results":"10","hashOfConfig":"8"},{"size":2245,"mtime":1611914306950,"results":"11","hashOfConfig":"8"},{"size":149,"mtime":1611320217044,"results":"12","hashOfConfig":"8"},{"size":158,"mtime":1611320198855,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13g0nkg",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/caleb/Public/Foodie-order/client/src/App.js",[],"/home/caleb/Public/Foodie-order/client/src/Components/Pages/Cart/Cart.js",["28"],"import React, { Fragment, useEffect } from 'react';\nimport '../Food/Food.css';\n\nconst Cart = ({ cart, setCart }) => {\n\n    //save to localStorage\n    useEffect(() => {\n        const addedToCart = JSON.parse(localStorage.getItem('added-to-cart'));\n        if (addedToCart) {\n            setCart(addedToCart);\n        }\n    }, []);\n\n    const saveToLocalStorage = (items) => {\n        localStorage.setItem('added-to-cart', JSON.stringify(items));\n    }\n\n    //remove from cart\n    const removeFromCart = (receiptToRemove) => {\n        const removeItem = cart.filter((receipt) => receipt !== receiptToRemove);\n        setCart(removeItem);\n        saveToLocalStorage(removeItem);\n    };\n\n    //get cart total cost\n    const getTotalSum = () => {\n        const sumCart = cart.reduce((sum, { price, quantity }) => sum + price * quantity, 0)\n        return sumCart.toFixed(2);\n    };\n\n    //clear cart\n    const clearCart = () => {\n        let cartLength = [];\n        setCart(cartLength);\n        saveToLocalStorage(cartLength);\n    }\n\n    //increment quantity \n    const setQuantity = (food, amount) => {\n        const newCart = [...cart];\n        newCart.find(item => item.title === food.title).quantity = amount;\n        setCart(newCart);\n        saveToLocalStorage(newCart);\n    }\n\n    return (\n        <div className=\"cart__component\">\n            {cart.length === 0 ? (\n                <Fragment>\n                    <div className=\"empty\">\n                        <i className=\"fab fa-opencart\"></i><br />\n                        <h1 className=\"cart__heading\">Your cart is empty</h1>\n                    </div>\n                </Fragment>\n            ) : (\n                    <>\n                        <h1 className=\"food__heading\">Your Cart  <i className=\"fas fa-utensils\"></i></h1><br />\n                        <h3 className=\"total__cost\">Total: <b className=\"bold\">${getTotalSum()} <i class=\"fas fa-money-check-alt\"></i></b></h3>\n                        <div className=\"clear_the_cart\">\n                            {cart.length > 0 && (<div id=\"clear__Btn\" onClick={clearCart}>Clear Cart</div>)}\n                        </div>\n                        <Fragment>\n                            <div className=\"food__\">\n                                {cart.map((receipt, idx) => (\n                                    <div className=\"food__container\" key={idx}>\n                                        <div className=\"Header\">\n                                            {receipt.title}\n                                        </div>\n                                        <img className=\"img\" src={receipt.image} alt={receipt.title} />\n                                        <div className=\"price__\">\n                                            ${receipt.price}\n                                        </div>\n                                        <h5>Quantity</h5>\n                                        <div className=\"quantity\">\n                                            <h4 className=\"quantity__\">\n                                                <input\n                                                    type=\"text\"\n                                                    htmlFor=\"input\"\n                                                    className=\"input__text\"\n                                                    value={receipt.quantity}\n                                                    onChange={(e) =>\n                                                        setQuantity(receipt, e.target.value > 0 ? parseInt(e.target.value) : 0)}\n                                                    placeholder=\"Enter quantity\"\n                                                />\n                                            </h4>\n                                        </div>\n                                        <div className=\"buttons__\">\n                                            <div className=\"Btn__love\">\n                                                <i id=\"icon__trash\" onClick={() => removeFromCart(receipt)}><i className=\"far fa-trash-alt\"></i></i>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                            <div className=\"check__out\">\n                                <div className=\"checkOut__Btn\">Check Out <i class=\"fas fa-money-check\"></i></div>\n                            </div>\n                        </Fragment>\n                    </>\n                )}\n        </div>\n    )\n}\n\nexport default Cart;\n",["29","30"],"/home/caleb/Public/Foodie-order/client/src/Components/Nav/Navbar.js",[],"/home/caleb/Public/Foodie-order/client/src/Components/Pages/Food/Food.js",[],"/home/caleb/Public/Foodie-order/client/src/Components/Pages/Saved/Saved.js",[],"/home/caleb/Public/Foodie-order/client/src/Components/Pages/Products/Products.js",[],{"ruleId":"31","severity":1,"message":"32","line":12,"column":8,"nodeType":"33","endLine":12,"endColumn":10,"suggestions":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCart'. Either include it or remove the dependency array. If 'setCart' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["39"],"no-native-reassign",["40"],"no-negated-in-lhs",["41"],{"desc":"42","fix":"43"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [setCart]",{"range":"44","text":"45"},[325,327],"[setCart]"]